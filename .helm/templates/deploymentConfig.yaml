---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include ".helm.fullname" . }}
data:
  nginx.conf: |
    user  app;
    worker_processes  1;

    error_log stderr warn;
    pid        /var/run/nginx.pid;

    load_module modules/ngx_http_js_module.so;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        #                  '$status $body_bytes_sent "$http_referer" '
        #                  '"$http_user_agent" "$http_x_forwarded_for"';


        log_format combined_plus escape=json '{ "time": "$time_iso8601",'
                                        '"request_id": "$request_id",'
                                        '"user": "$remote_user",'
                                        '"address": "$remote_addr",'
                                        '"bytes_received": $request_length,'
                                        '"bytes_sent": $bytes_sent,'
                                        '"protocol": "$server_protocol",'
                                        '"scheme": "$scheme",'
                                        '"method": "$request_method",'
                                        '"host": "$host",'
                                        '"path": "$uri",'
                                        '"request_query": "$args",'
                                        '"referrer": "$http_referer",'
                                        '"user_agent": "$http_user_agent",'
                                        '"request_time": $request_time,'
                                        '"status": $status,'
                                        '"auth_cookie": "$cookie_dashauth",'
                                        '"upstream_addr": "$upstream_addr",'
                                        '"upstream_bytes_received": $upstream_bytes_received,'
                                        '"upstream_response_time": $upstream_response_time,'
                                        '"upstream_status": "$upstream_status" }';

        access_log /dev/stdout combined_plus;

        server_tokens off;
        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        ##
        # Gzip Settings
        ##
        gzip on;
        gzip_proxied any;
        gzip_types
            text/plain
            text/css
            application/json
            application/javascript
            text/javascript
            text/xml
            application/xml
            application/xml+rss
            image/svg+xml;
        gzip_vary on;
        gzip_comp_level 9;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;

        set_real_ip_from                0.0.0.0/0;
        real_ip_header                  X-Forwarded-For;
        real_ip_recursive               on;
        proxy_set_header                Host        $host;
        proxy_set_header                X-Real-IP   $remote_addr;
        proxy_set_header                X-Forwarded-For $proxy_add_x_forwarded_for;

        map_hash_bucket_size 128;

        include /etc/nginx/conf.d/*.conf;
    }
  default.conf: |
    js_import http.js;
    js_set $decoded_target_url http.decoded_target_url;
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.php index.html;
        set $log_location "undef";
        location /_tech/ngx-status {
            add_header Content-Type text/plain;
            access_log off;
            return 200 "ok\n";
        }
        location /_tech/is_auth {
          if ($no_cookie_auth) {
            return 401 "Authorization Required";
          }
          add_header Authorization "Bearer $cookie2token";
          add_header Content-Type text/plain;
          return 200 "Authorization: Bearer $cookie2token";
        }
        location /_tech/auth {
          auth_basic "Authorization Required";
          auth_basic_user_file /etc/nginx/auth.d/htpasswd.dat;
          try_files DUMMY @result;
        }
        location @result {
          add_header Authorization "Bearer $user2token";
          add_header Content-Type text/plain;
          add_header Set-Cookie "dashauth=$user2cookie; Path=/; Max-Age=7200";
          return 302 $decoded_target_url;
        }
        error_page 500 502 503 504 /50x.html;
    }
