{{- define "authSecret" -}}
{{- range $user, $pwd := $.Values.auth }}
{{- $pass := pluck $.Values.global.env $pwd.password | first | default $pwd.password._default -}}
{{ printf "%s:%s" $user $pass }}
{{- end }}
{{- end -}}

{{- define "authMaps" -}}
map $remote_user $user2token {
{{- range $user, $data := $.Values.auth }}
{{- $token := pluck $.Values.global.env $data.token | first | default $data.token._default }}
  {{ $user | quote }} {{ $token | quote }};
{{- end }}
}
map $remote_user $user2cookie {
{{- range $user, $data := $.Values.auth }}
{{- $pass := pluck $.Values.global.env $data.token | first | default $data.token._default }}
{{- $cookie := printf "%s:%s" $user $pass | sha256sum }}
  {{ $user | quote }} {{ $cookie | quote }};
{{- end }}
}
map $cookie_dashauth $cookie2token {
{{- range $user, $data := $.Values.auth }}
{{- $pass := pluck $.Values.global.env $data.token | first | default $data.token._default }}
{{- $token := pluck $.Values.global.env $data.token | first | default $data.token._default }}
{{- $cookie := printf "%s:%s" $user $pass | sha256sum }}
  {{ $cookie | quote }} {{ $token | quote }};
{{- end }}
}
map $cookie_dashauth $no_cookie_auth {
  default 1;
{{- range $user, $data := $.Values.auth }}
{{- $pass := pluck $.Values.global.env $data.token | first | default $data.token._default }}
{{- $cookie := printf "%s:%s" $user $pass | sha256sum }}
  {{ $cookie | quote }} 0;
{{- end }}
}
{{- end -}}
---
kind: Secret
apiVersion: v1
metadata:
  name: {{ include ".helm.fullname" . }}
data:
  map.conf: {{ include "authMaps" . | b64enc | quote }}
  htpasswd.dat: {{ include "authSecret" . | b64enc | quote }}

